<UserControl x:Class="StructLayout.LayoutViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StructLayout"
             xmlns:common="clr-namespace:StructLayout.Common"
             Background="{DynamicResource {x:Static common:ColorTheme.Background}}"
             Foreground="{DynamicResource {x:Static common:ColorTheme.Foreground}}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="b2v" />
        <Style TargetType="RadioButton">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static common:ColorTheme.Foreground}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static common:ColorTheme.Background}}" />
        </Style>
        <Style TargetType="TextBox" x:Key="TextBoxAlign">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static common:ColorTheme.Foreground}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static common:ColorTheme.Background}}" />
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=displayAlignementComboBox, Path=SelectedIndex}" Value="2">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static common:ColorTheme.Foreground}}" />
        </Style>
        <Style TargetType="Button" x:Key="StackButton">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static common:ColorTheme.Foreground}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static common:ColorTheme.Background}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static common:ColorTheme.ComboBox_MouseOverForeground}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static common:ColorTheme.ComboBox_MouseOverBackground}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <WrapPanel >
                <Label FontWeight="Bold">Display alignment:</Label>
                <ComboBox x:Name="displayAlignementComboBox" Width="90" SelectionChanged="DisplayAlignmentComboBox_SelectionChanged"/>
                <TextBox Width="50" Height="20" TextAlignment="Center"  x:Name="displayAlignmentValue" MaxLength="3" PreviewTextInput="NumberValidationTextBox">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxAlign}" />
                    </TextBox.Style>
                </TextBox>

                <Label FontWeight="Bold">Mode:</Label>
                <ComboBox x:Name="displayModeComboBox" Width="65" SelectionChanged="DisplayModeComboBox_SelectionChanged"/>

                <Button Click="ButtonExpandAll_Click" Margin="10 0 0 0">
                    Expand All
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource StackButton}"/>
                    </Button.Style>
                </Button>
                <Button Click="ButtonCollapseAll_Click" Margin="5 0 0 0">
                    Collapse All
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource StackButton}"/>
                    </Button.Style>
                </Button>

            </WrapPanel>
        </Grid>
        <local:CustomScrollViewer Grid.Row="1" x:Name="scrollViewer" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
            <Canvas x:Name="canvas" VerticalAlignment="Top" HorizontalAlignment="Left" Focusable="True"/>
        </local:CustomScrollViewer>
    </Grid>
</UserControl>
